#! /bin/bash -e

. config

cleanup()
{
    umount "${mount_dir}"
}

get_result_name()
{
    iosched_name=`basename "${iosched}"`
    benchmark_name=`basename "${benchmark}"`
    result=`readlink -m "${result_dir:-result}/${fs}-${iosched_name}-${benchmark_name}"`
}

analyze()
{
    for fs_base in fs/*/ ; do
        echo `basename "${fs_base}"`
        for benchmark in benchmark/* ; do
            [ -x "${benchmark}" ] && "${benchmark}" use || continue
            echo "  "`basename "${benchmark}"`:
            for fs in ${fs_base}/* ; do
                [ -x "${fs}" ] && "${fs}" use || continue
                fs_name=`basename "${fs}"`
                for iosched in iosched/* ; do
                    [ -x "${iosched}" ] && "${iosched}" use || continue
                    get_result_name
                    echo -n "    ${fs_name} ${iosched_name} "
                    "${benchmark}" metric "$1" "${result}"
                done
            done | sort -n -k 3 -r | head -n 5
        done

        echo '  Overall:'
        for fs in ${fs_base}/* ; do
            [ -x "${fs}" ] && "${fs}" use || continue
            fs_name=`basename "${fs}"`
            for iosched in iosched/* ; do
                [ -x "${iosched}" ] && "${iosched}" use || continue
                iosched_name=`basename "${iosched}"`
                echo -n "    ${fs_name} ${iosched_name} "
                for benchmark in benchmark/* ; do
                    [ -x "${benchmark}" ] && "${benchmark}" use || continue
                    get_result_name
                    "${benchmark}" metric "$1" "${result}"
                done | awk '{sum += $1} END {print sum}'
            done
        done | sort -n -k 3 -r | head -n 5
    done
}

run_single()
{
    trap cleanup EXIT

    get_result_name
    [ -f "${result}" ] && return

    "${fs}" prepare
    "${iosched}" prepare
    mkdir -p `dirname "${result}"`
    echo 3 > /proc/sys/vm/drop_caches || :
    time { "${benchmark}" run | tee "${result}" ; }
    "${fs}" cleanup
}

run()
{

    for fs in fs/*/* ; do
        [ -x "${fs}" ] && "${fs}" use || continue
        echo ${fs}

        for iosched in iosched/* ; do
            [ -x "${iosched}" ] && "${iosched}" use || continue
            echo ${iosched}

            for benchmark in benchmark/* ; do
                [ -x "${benchmark}" ] && "${benchmark}" use || continue
                echo ${benchmark}

                run_single
            done
        done
    done
}

gdiff()
{
    for fs in fs/*/ ; do
        for benchmark in benchmark/* ; do
            [ ! -x "${benchmark}" ] && continue
            echo ${benchmark}

            benchmark_name=`basename "${benchmark}"`
            "${benchmark}" gdiff `echo ${result_dir:-result}/${fs}*-${benchmark_name} | xargs -n1 readlink -f`
        done
    done
}

guess_geometry()
{
    flashbench -a "${device}" --blocksize=1024 | \
        sort -n -k 2 | \
        awk '/diff/{ diff = $10 + 0;
                     if ($10 ~ /m/) diff *= 1000000;
                     if ($10 ~ /Âµ/) diff *= 1000;
                     if (prev == 0) prev = diff;
                     diff2 = diff - prev;
                     if (diff2 < 0) diff2 = -diff2;
                     print $2, int(diff2 / diff * 1000);
                     prev = diff; }' | \
        sort -n -k 2 -r | head -n 2 | sort -n | \
        awk 'BEGIN {name[0] = "media_page_size"; name[1] = "media_erase_block_size"; printf "#\n# Guessed media geometry\n#\n"}
                   {printf "%s=%d\n", name[i++], $1}'
}

case "$1" in
    analyze)
        shift
        case "$1" in
            throughput|latency)
                analyze "$@"
                ;;
            *)
                exit 1
                ;;
        esac
        ;;

    gdiff)
        gdiff
        ;;

    geometry)
        guess_geometry
        ;;

    run_single)
        run_single
        ;;

    *)
        run
        ;;
esac
