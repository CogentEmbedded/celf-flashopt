. common

fio_filter()
{
    tr ';' ' '
}

fio_calc_work_set()
{
    echo 3 > /proc/sys/vm/drop_caches || :
    free_mem=`free -b | awk '/Mem:/{printf "%.0f", $4 + $6 + $7}'`
    work_set_size=`awk "BEGIN {printf \"%.0f\", ${free_mem} * ${work_set_ratio}}"`
    num_files=$(( ${work_set_size} / ( ${min_file_size:=4096} + ${max_file_size:=1048576} ) / 2 / ${num_jobs:=1} ))
}

fio_show_bandwidth()
{
    echo ${RW} | grep -qv 'read'  || printf "\"%s\" using 1:8 title \"%s read %s\" with linespoints, " "$1" "${label_text}" "${y_label}"
    echo ${RW} | grep -qv 'write' || printf "\"%s\" using 1:49 title \"%s write %s\" with linespoints, " "$1" "${label_text}" "${y_label}"
}

fio_show_clat()
{
    echo ${RW} | grep -qv 'read'  || printf "\"%s\" using 1:17 title \"%s read %s\" with linespoints, " "$1" "${label_text}" "${y_label}"
    echo ${RW} | grep -qv 'write' || printf "\"%s\" using 1:58 title \"%s write %s\" with linespoints, " "$1" "${label_text}" "${y_label}"
}

fio_gdiff_show()
{
    {
        show_method="$1"
        shift
        cat << EOF
            set logscale ; set autoscale fix ; set offsets 0.05, 0.05, 0.2, 0.05 ; set term wxt size 1200, 640 ;
            set grid ; set xtics 2 ; set ytics 2 ; set xlabel "${x_label}" ; set ylabel "${y_label}"
EOF
        echo -n 'plot '
        for f in "$@" ; do
            label_text=`echo "$f" | sed -e 's!.*/\([^/]\+/[^/]\+/[^/]\+/[^/]\+\)$!\1!'`
            "${show_method}" "$f"
            #shift
        done
    } | sed 's/, $//' | gnuplot -persist -
}

fio_gdiff()
{
    y_label='bandwidth (KiB/s)' fio_gdiff_show fio_show_bandwidth "$@"
    [ -n "$show_latency" ] && y_label='latency (us)' fio_gdiff_show fio_show_clat "$@" || :
}
